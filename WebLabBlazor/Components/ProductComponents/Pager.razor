@using WebLabBlazor.Services
@using WebLabRest.Models
@implements IDisposable
@rendermode InteractiveServer

<div class="btn-group">
    <button disabled="@(ProductService.CurrentPage == 1)" 
            @onclick="() => OnPageSelected(ProductService.CurrentPage - 1)">
        Назад
    </button>
    
    @for (int i = 1; i <= ProductService.TotalPages; i++)
    {
        <button class="btn @(i == ProductService.CurrentPage ? "btn-primary" : "btn-secondary")"
                @onclick="() => OnPageSelected(i)">
            @i
        </button>
    }
    
    <button disabled="@(ProductService.CurrentPage == ProductService.TotalPages)" 
            @onclick="() => OnPageSelected(ProductService.CurrentPage + 1)">
        Вперед
    </button>
</div>

@code {
    [CascadingParameter] public IProductService<Dish> ProductService { get; set; } = null!;

    protected override void OnInitialized() 
        => ProductService.ListChanged += StateHasChanged;

    private async Task OnPageSelected(int pageNo) 
        => await ProductService.GetProducts(pageNo);

    public void Dispose() 
        => ProductService.ListChanged -= StateHasChanged;
}